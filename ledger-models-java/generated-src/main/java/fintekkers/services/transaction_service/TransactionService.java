// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fintekkers/services/transaction-service/transaction_service.proto

package fintekkers.services.transaction_service;

public final class TransactionService {
  private TransactionService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf service {@code fintekkers.services.transaction_service.Transaction}
   */
  public static abstract class Transaction
      implements com.google.protobuf.Service {
    protected Transaction() {}

    public interface Interface {
      /**
       * <code>rpc CreateOrUpdate(.fintekkers.requests.transaction.CreateTransactionRequestProto) returns (.fintekkers.requests.transaction.CreateTransactionResponseProto);</code>
       */
      public abstract void createOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.CreateTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.transaction.CreateTransactionResponseProto> done);

      /**
       * <code>rpc GetByIds(.fintekkers.requests.transaction.QueryTransactionRequestProto) returns (.fintekkers.requests.transaction.QueryTransactionResponseProto);</code>
       */
      public abstract void getByIds(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done);

      /**
       * <code>rpc Search(.fintekkers.requests.transaction.QueryTransactionRequestProto) returns (stream .fintekkers.requests.transaction.QueryTransactionResponseProto);</code>
       */
      public abstract void search(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done);

      /**
       * <code>rpc ListIds(.fintekkers.requests.transaction.QueryTransactionRequestProto) returns (.fintekkers.requests.transaction.QueryTransactionResponseProto);</code>
       */
      public abstract void listIds(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done);

      /**
       * <code>rpc ValidateCreateOrUpdate(.fintekkers.requests.transaction.CreateTransactionRequestProto) returns (.fintekkers.requests.util.errors.SummaryProto);</code>
       */
      public abstract void validateCreateOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.CreateTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done);

      /**
       * <code>rpc ValidateQueryRequest(.fintekkers.requests.transaction.QueryTransactionRequestProto) returns (.fintekkers.requests.util.errors.SummaryProto);</code>
       */
      public abstract void validateQueryRequest(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new Transaction() {
        @java.lang.Override
        public  void createOrUpdate(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.transaction.CreateTransactionRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.transaction.CreateTransactionResponseProto> done) {
          impl.createOrUpdate(controller, request, done);
        }

        @java.lang.Override
        public  void getByIds(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.transaction.QueryTransactionRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done) {
          impl.getByIds(controller, request, done);
        }

        @java.lang.Override
        public  void search(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.transaction.QueryTransactionRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done) {
          impl.search(controller, request, done);
        }

        @java.lang.Override
        public  void listIds(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.transaction.QueryTransactionRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done) {
          impl.listIds(controller, request, done);
        }

        @java.lang.Override
        public  void validateCreateOrUpdate(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.transaction.CreateTransactionRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done) {
          impl.validateCreateOrUpdate(controller, request, done);
        }

        @java.lang.Override
        public  void validateQueryRequest(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.transaction.QueryTransactionRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done) {
          impl.validateQueryRequest(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.createOrUpdate(controller, (fintekkers.requests.transaction.CreateTransactionRequestProto)request);
            case 1:
              return impl.getByIds(controller, (fintekkers.requests.transaction.QueryTransactionRequestProto)request);
            case 2:
              return impl.search(controller, (fintekkers.requests.transaction.QueryTransactionRequestProto)request);
            case 3:
              return impl.listIds(controller, (fintekkers.requests.transaction.QueryTransactionRequestProto)request);
            case 4:
              return impl.validateCreateOrUpdate(controller, (fintekkers.requests.transaction.CreateTransactionRequestProto)request);
            case 5:
              return impl.validateQueryRequest(controller, (fintekkers.requests.transaction.QueryTransactionRequestProto)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return fintekkers.requests.transaction.CreateTransactionRequestProto.getDefaultInstance();
            case 1:
              return fintekkers.requests.transaction.QueryTransactionRequestProto.getDefaultInstance();
            case 2:
              return fintekkers.requests.transaction.QueryTransactionRequestProto.getDefaultInstance();
            case 3:
              return fintekkers.requests.transaction.QueryTransactionRequestProto.getDefaultInstance();
            case 4:
              return fintekkers.requests.transaction.CreateTransactionRequestProto.getDefaultInstance();
            case 5:
              return fintekkers.requests.transaction.QueryTransactionRequestProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return fintekkers.requests.transaction.CreateTransactionResponseProto.getDefaultInstance();
            case 1:
              return fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance();
            case 2:
              return fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance();
            case 3:
              return fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance();
            case 4:
              return fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance();
            case 5:
              return fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc CreateOrUpdate(.fintekkers.requests.transaction.CreateTransactionRequestProto) returns (.fintekkers.requests.transaction.CreateTransactionResponseProto);</code>
     */
    public abstract void createOrUpdate(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.transaction.CreateTransactionRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.transaction.CreateTransactionResponseProto> done);

    /**
     * <code>rpc GetByIds(.fintekkers.requests.transaction.QueryTransactionRequestProto) returns (.fintekkers.requests.transaction.QueryTransactionResponseProto);</code>
     */
    public abstract void getByIds(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.transaction.QueryTransactionRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done);

    /**
     * <code>rpc Search(.fintekkers.requests.transaction.QueryTransactionRequestProto) returns (stream .fintekkers.requests.transaction.QueryTransactionResponseProto);</code>
     */
    public abstract void search(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.transaction.QueryTransactionRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done);

    /**
     * <code>rpc ListIds(.fintekkers.requests.transaction.QueryTransactionRequestProto) returns (.fintekkers.requests.transaction.QueryTransactionResponseProto);</code>
     */
    public abstract void listIds(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.transaction.QueryTransactionRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done);

    /**
     * <code>rpc ValidateCreateOrUpdate(.fintekkers.requests.transaction.CreateTransactionRequestProto) returns (.fintekkers.requests.util.errors.SummaryProto);</code>
     */
    public abstract void validateCreateOrUpdate(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.transaction.CreateTransactionRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done);

    /**
     * <code>rpc ValidateQueryRequest(.fintekkers.requests.transaction.QueryTransactionRequestProto) returns (.fintekkers.requests.util.errors.SummaryProto);</code>
     */
    public abstract void validateQueryRequest(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.transaction.QueryTransactionRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return fintekkers.services.transaction_service.TransactionService.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.createOrUpdate(controller, (fintekkers.requests.transaction.CreateTransactionRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.transaction.CreateTransactionResponseProto>specializeCallback(
              done));
          return;
        case 1:
          this.getByIds(controller, (fintekkers.requests.transaction.QueryTransactionRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.transaction.QueryTransactionResponseProto>specializeCallback(
              done));
          return;
        case 2:
          this.search(controller, (fintekkers.requests.transaction.QueryTransactionRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.transaction.QueryTransactionResponseProto>specializeCallback(
              done));
          return;
        case 3:
          this.listIds(controller, (fintekkers.requests.transaction.QueryTransactionRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.transaction.QueryTransactionResponseProto>specializeCallback(
              done));
          return;
        case 4:
          this.validateCreateOrUpdate(controller, (fintekkers.requests.transaction.CreateTransactionRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.util.errors.Summary.SummaryProto>specializeCallback(
              done));
          return;
        case 5:
          this.validateQueryRequest(controller, (fintekkers.requests.transaction.QueryTransactionRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.util.errors.Summary.SummaryProto>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return fintekkers.requests.transaction.CreateTransactionRequestProto.getDefaultInstance();
        case 1:
          return fintekkers.requests.transaction.QueryTransactionRequestProto.getDefaultInstance();
        case 2:
          return fintekkers.requests.transaction.QueryTransactionRequestProto.getDefaultInstance();
        case 3:
          return fintekkers.requests.transaction.QueryTransactionRequestProto.getDefaultInstance();
        case 4:
          return fintekkers.requests.transaction.CreateTransactionRequestProto.getDefaultInstance();
        case 5:
          return fintekkers.requests.transaction.QueryTransactionRequestProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return fintekkers.requests.transaction.CreateTransactionResponseProto.getDefaultInstance();
        case 1:
          return fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance();
        case 2:
          return fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance();
        case 3:
          return fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance();
        case 4:
          return fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance();
        case 5:
          return fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends fintekkers.services.transaction_service.TransactionService.Transaction implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void createOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.CreateTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.transaction.CreateTransactionResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          fintekkers.requests.transaction.CreateTransactionResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.transaction.CreateTransactionResponseProto.class,
            fintekkers.requests.transaction.CreateTransactionResponseProto.getDefaultInstance()));
      }

      public  void getByIds(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.transaction.QueryTransactionResponseProto.class,
            fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance()));
      }

      public  void search(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.transaction.QueryTransactionResponseProto.class,
            fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance()));
      }

      public  void listIds(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.transaction.QueryTransactionResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.transaction.QueryTransactionResponseProto.class,
            fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance()));
      }

      public  void validateCreateOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.CreateTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.util.errors.Summary.SummaryProto.class,
            fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance()));
      }

      public  void validateQueryRequest(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.util.errors.Summary.SummaryProto.class,
            fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public fintekkers.requests.transaction.CreateTransactionResponseProto createOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.CreateTransactionRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.transaction.QueryTransactionResponseProto getByIds(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.transaction.QueryTransactionResponseProto search(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.transaction.QueryTransactionResponseProto listIds(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.util.errors.Summary.SummaryProto validateCreateOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.CreateTransactionRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.util.errors.Summary.SummaryProto validateQueryRequest(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public fintekkers.requests.transaction.CreateTransactionResponseProto createOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.CreateTransactionRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.transaction.CreateTransactionResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          fintekkers.requests.transaction.CreateTransactionResponseProto.getDefaultInstance());
      }


      public fintekkers.requests.transaction.QueryTransactionResponseProto getByIds(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.transaction.QueryTransactionResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance());
      }


      public fintekkers.requests.transaction.QueryTransactionResponseProto search(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.transaction.QueryTransactionResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance());
      }


      public fintekkers.requests.transaction.QueryTransactionResponseProto listIds(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.transaction.QueryTransactionResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          fintekkers.requests.transaction.QueryTransactionResponseProto.getDefaultInstance());
      }


      public fintekkers.requests.util.errors.Summary.SummaryProto validateCreateOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.CreateTransactionRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.util.errors.Summary.SummaryProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance());
      }


      public fintekkers.requests.util.errors.Summary.SummaryProto validateQueryRequest(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.transaction.QueryTransactionRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.util.errors.Summary.SummaryProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:fintekkers.services.transaction_service.Transaction)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nAfintekkers/services/transaction-servic" +
      "e/transaction_service.proto\022\'fintekkers." +
      "services.transaction_service\032@fintekkers" +
      "/requests/transaction/create_transaction" +
      "_request.proto\032Afintekkers/requests/tran" +
      "saction/create_transaction_response.prot" +
      "o\032?fintekkers/requests/transaction/query" +
      "_transaction_request.proto\032@fintekkers/r" +
      "equests/transaction/query_transaction_re" +
      "sponse.proto\032-fintekkers/requests/util/e" +
      "rrors/summary.proto2\325\006\n\013Transaction\022\221\001\n\016" +
      "CreateOrUpdate\022>.fintekkers.requests.tra" +
      "nsaction.CreateTransactionRequestProto\032?" +
      ".fintekkers.requests.transaction.CreateT" +
      "ransactionResponseProto\022\211\001\n\010GetByIds\022=.f" +
      "intekkers.requests.transaction.QueryTran" +
      "sactionRequestProto\032>.fintekkers.request" +
      "s.transaction.QueryTransactionResponsePr" +
      "oto\022\211\001\n\006Search\022=.fintekkers.requests.tra" +
      "nsaction.QueryTransactionRequestProto\032>." +
      "fintekkers.requests.transaction.QueryTra" +
      "nsactionResponseProto0\001\022\210\001\n\007ListIds\022=.fi" +
      "ntekkers.requests.transaction.QueryTrans" +
      "actionRequestProto\032>.fintekkers.requests" +
      ".transaction.QueryTransactionResponsePro" +
      "to\022\207\001\n\026ValidateCreateOrUpdate\022>.fintekke" +
      "rs.requests.transaction.CreateTransactio" +
      "nRequestProto\032-.fintekkers.requests.util" +
      ".errors.SummaryProto\022\204\001\n\024ValidateQueryRe" +
      "quest\022=.fintekkers.requests.transaction." +
      "QueryTransactionRequestProto\032-.fintekker" +
      "s.requests.util.errors.SummaryProtoB\006\210\001\001" +
      "\220\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          fintekkers.requests.transaction.CreateTransactionRequestProtos.getDescriptor(),
          fintekkers.requests.transaction.CreateTransactionResponseProtos.getDescriptor(),
          fintekkers.requests.transaction.QueryTransactionRequestProtos.getDescriptor(),
          fintekkers.requests.transaction.QueryTransactionResponseProtos.getDescriptor(),
          fintekkers.requests.util.errors.Summary.getDescriptor(),
        });
    fintekkers.requests.transaction.CreateTransactionRequestProtos.getDescriptor();
    fintekkers.requests.transaction.CreateTransactionResponseProtos.getDescriptor();
    fintekkers.requests.transaction.QueryTransactionRequestProtos.getDescriptor();
    fintekkers.requests.transaction.QueryTransactionResponseProtos.getDescriptor();
    fintekkers.requests.util.errors.Summary.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
