// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fintekkers/services/price-service/price_service.proto

package fintekkers.services.price_service;

public final class PriceService {
  private PriceService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf service {@code fintekkers.services.price_service.Price}
   */
  public static abstract class Price
      implements com.google.protobuf.Service {
    protected Price() {}

    public interface Interface {
      /**
       * <code>rpc CreateOrUpdate(.fintekkers.requests.price.CreatePriceRequestProto) returns (.fintekkers.requests.price.CreatePriceResponseProto);</code>
       */
      public abstract void createOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.CreatePriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.price.CreatePriceResponseProto> done);

      /**
       * <code>rpc GetByIDs(.fintekkers.requests.price.QueryPriceRequestProto) returns (.fintekkers.requests.price.QueryPriceResponseProto);</code>
       */
      public abstract void getByIDs(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done);

      /**
       * <code>rpc Search(.fintekkers.requests.price.QueryPriceRequestProto) returns (stream .fintekkers.requests.price.QueryPriceResponseProto);</code>
       */
      public abstract void search(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done);

      /**
       * <code>rpc ListIDs(.fintekkers.requests.price.QueryPriceRequestProto) returns (.fintekkers.requests.price.QueryPriceResponseProto);</code>
       */
      public abstract void listIDs(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done);

      /**
       * <code>rpc ValidateCreateOrUpdate(.fintekkers.requests.price.CreatePriceRequestProto) returns (.fintekkers.requests.util.errors.SummaryProto);</code>
       */
      public abstract void validateCreateOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.CreatePriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done);

      /**
       * <code>rpc ValidateQueryRequest(.fintekkers.requests.price.QueryPriceRequestProto) returns (.fintekkers.requests.util.errors.SummaryProto);</code>
       */
      public abstract void validateQueryRequest(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new Price() {
        @java.lang.Override
        public  void createOrUpdate(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.price.CreatePriceRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.price.CreatePriceResponseProto> done) {
          impl.createOrUpdate(controller, request, done);
        }

        @java.lang.Override
        public  void getByIDs(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.price.QueryPriceRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done) {
          impl.getByIDs(controller, request, done);
        }

        @java.lang.Override
        public  void search(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.price.QueryPriceRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done) {
          impl.search(controller, request, done);
        }

        @java.lang.Override
        public  void listIDs(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.price.QueryPriceRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done) {
          impl.listIDs(controller, request, done);
        }

        @java.lang.Override
        public  void validateCreateOrUpdate(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.price.CreatePriceRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done) {
          impl.validateCreateOrUpdate(controller, request, done);
        }

        @java.lang.Override
        public  void validateQueryRequest(
            com.google.protobuf.RpcController controller,
            fintekkers.requests.price.QueryPriceRequestProto request,
            com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done) {
          impl.validateQueryRequest(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.createOrUpdate(controller, (fintekkers.requests.price.CreatePriceRequestProto)request);
            case 1:
              return impl.getByIDs(controller, (fintekkers.requests.price.QueryPriceRequestProto)request);
            case 2:
              return impl.search(controller, (fintekkers.requests.price.QueryPriceRequestProto)request);
            case 3:
              return impl.listIDs(controller, (fintekkers.requests.price.QueryPriceRequestProto)request);
            case 4:
              return impl.validateCreateOrUpdate(controller, (fintekkers.requests.price.CreatePriceRequestProto)request);
            case 5:
              return impl.validateQueryRequest(controller, (fintekkers.requests.price.QueryPriceRequestProto)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return fintekkers.requests.price.CreatePriceRequestProto.getDefaultInstance();
            case 1:
              return fintekkers.requests.price.QueryPriceRequestProto.getDefaultInstance();
            case 2:
              return fintekkers.requests.price.QueryPriceRequestProto.getDefaultInstance();
            case 3:
              return fintekkers.requests.price.QueryPriceRequestProto.getDefaultInstance();
            case 4:
              return fintekkers.requests.price.CreatePriceRequestProto.getDefaultInstance();
            case 5:
              return fintekkers.requests.price.QueryPriceRequestProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return fintekkers.requests.price.CreatePriceResponseProto.getDefaultInstance();
            case 1:
              return fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance();
            case 2:
              return fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance();
            case 3:
              return fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance();
            case 4:
              return fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance();
            case 5:
              return fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc CreateOrUpdate(.fintekkers.requests.price.CreatePriceRequestProto) returns (.fintekkers.requests.price.CreatePriceResponseProto);</code>
     */
    public abstract void createOrUpdate(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.price.CreatePriceRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.price.CreatePriceResponseProto> done);

    /**
     * <code>rpc GetByIDs(.fintekkers.requests.price.QueryPriceRequestProto) returns (.fintekkers.requests.price.QueryPriceResponseProto);</code>
     */
    public abstract void getByIDs(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.price.QueryPriceRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done);

    /**
     * <code>rpc Search(.fintekkers.requests.price.QueryPriceRequestProto) returns (stream .fintekkers.requests.price.QueryPriceResponseProto);</code>
     */
    public abstract void search(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.price.QueryPriceRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done);

    /**
     * <code>rpc ListIDs(.fintekkers.requests.price.QueryPriceRequestProto) returns (.fintekkers.requests.price.QueryPriceResponseProto);</code>
     */
    public abstract void listIDs(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.price.QueryPriceRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done);

    /**
     * <code>rpc ValidateCreateOrUpdate(.fintekkers.requests.price.CreatePriceRequestProto) returns (.fintekkers.requests.util.errors.SummaryProto);</code>
     */
    public abstract void validateCreateOrUpdate(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.price.CreatePriceRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done);

    /**
     * <code>rpc ValidateQueryRequest(.fintekkers.requests.price.QueryPriceRequestProto) returns (.fintekkers.requests.util.errors.SummaryProto);</code>
     */
    public abstract void validateQueryRequest(
        com.google.protobuf.RpcController controller,
        fintekkers.requests.price.QueryPriceRequestProto request,
        com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return fintekkers.services.price_service.PriceService.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.createOrUpdate(controller, (fintekkers.requests.price.CreatePriceRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.price.CreatePriceResponseProto>specializeCallback(
              done));
          return;
        case 1:
          this.getByIDs(controller, (fintekkers.requests.price.QueryPriceRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.price.QueryPriceResponseProto>specializeCallback(
              done));
          return;
        case 2:
          this.search(controller, (fintekkers.requests.price.QueryPriceRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.price.QueryPriceResponseProto>specializeCallback(
              done));
          return;
        case 3:
          this.listIDs(controller, (fintekkers.requests.price.QueryPriceRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.price.QueryPriceResponseProto>specializeCallback(
              done));
          return;
        case 4:
          this.validateCreateOrUpdate(controller, (fintekkers.requests.price.CreatePriceRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.util.errors.Summary.SummaryProto>specializeCallback(
              done));
          return;
        case 5:
          this.validateQueryRequest(controller, (fintekkers.requests.price.QueryPriceRequestProto)request,
            com.google.protobuf.RpcUtil.<fintekkers.requests.util.errors.Summary.SummaryProto>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return fintekkers.requests.price.CreatePriceRequestProto.getDefaultInstance();
        case 1:
          return fintekkers.requests.price.QueryPriceRequestProto.getDefaultInstance();
        case 2:
          return fintekkers.requests.price.QueryPriceRequestProto.getDefaultInstance();
        case 3:
          return fintekkers.requests.price.QueryPriceRequestProto.getDefaultInstance();
        case 4:
          return fintekkers.requests.price.CreatePriceRequestProto.getDefaultInstance();
        case 5:
          return fintekkers.requests.price.QueryPriceRequestProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return fintekkers.requests.price.CreatePriceResponseProto.getDefaultInstance();
        case 1:
          return fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance();
        case 2:
          return fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance();
        case 3:
          return fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance();
        case 4:
          return fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance();
        case 5:
          return fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends fintekkers.services.price_service.PriceService.Price implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void createOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.CreatePriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.price.CreatePriceResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          fintekkers.requests.price.CreatePriceResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.price.CreatePriceResponseProto.class,
            fintekkers.requests.price.CreatePriceResponseProto.getDefaultInstance()));
      }

      public  void getByIDs(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.price.QueryPriceResponseProto.class,
            fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance()));
      }

      public  void search(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.price.QueryPriceResponseProto.class,
            fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance()));
      }

      public  void listIDs(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.price.QueryPriceResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.price.QueryPriceResponseProto.class,
            fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance()));
      }

      public  void validateCreateOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.CreatePriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.util.errors.Summary.SummaryProto.class,
            fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance()));
      }

      public  void validateQueryRequest(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request,
          com.google.protobuf.RpcCallback<fintekkers.requests.util.errors.Summary.SummaryProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            fintekkers.requests.util.errors.Summary.SummaryProto.class,
            fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public fintekkers.requests.price.CreatePriceResponseProto createOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.CreatePriceRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.price.QueryPriceResponseProto getByIDs(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.price.QueryPriceResponseProto search(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.price.QueryPriceResponseProto listIDs(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.util.errors.Summary.SummaryProto validateCreateOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.CreatePriceRequestProto request)
          throws com.google.protobuf.ServiceException;

      public fintekkers.requests.util.errors.Summary.SummaryProto validateQueryRequest(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public fintekkers.requests.price.CreatePriceResponseProto createOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.CreatePriceRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.price.CreatePriceResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          fintekkers.requests.price.CreatePriceResponseProto.getDefaultInstance());
      }


      public fintekkers.requests.price.QueryPriceResponseProto getByIDs(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.price.QueryPriceResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance());
      }


      public fintekkers.requests.price.QueryPriceResponseProto search(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.price.QueryPriceResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance());
      }


      public fintekkers.requests.price.QueryPriceResponseProto listIDs(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.price.QueryPriceResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          fintekkers.requests.price.QueryPriceResponseProto.getDefaultInstance());
      }


      public fintekkers.requests.util.errors.Summary.SummaryProto validateCreateOrUpdate(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.CreatePriceRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.util.errors.Summary.SummaryProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance());
      }


      public fintekkers.requests.util.errors.Summary.SummaryProto validateQueryRequest(
          com.google.protobuf.RpcController controller,
          fintekkers.requests.price.QueryPriceRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (fintekkers.requests.util.errors.Summary.SummaryProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          fintekkers.requests.util.errors.Summary.SummaryProto.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:fintekkers.services.price_service.Price)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5fintekkers/services/price-service/pric" +
      "e_service.proto\022!fintekkers.services.pri" +
      "ce_service\0323fintekkers/requests/price/qu" +
      "ery_price_request.proto\0324fintekkers/requ" +
      "ests/price/query_price_response.proto\0324f" +
      "intekkers/requests/price/create_price_re" +
      "quest.proto\0325fintekkers/requests/price/c" +
      "reate_price_response.proto\032-fintekkers/r" +
      "equests/util/errors/summary.proto2\321\005\n\005Pr" +
      "ice\022y\n\016CreateOrUpdate\0222.fintekkers.reque" +
      "sts.price.CreatePriceRequestProto\0323.fint" +
      "ekkers.requests.price.CreatePriceRespons" +
      "eProto\022q\n\010GetByIDs\0221.fintekkers.requests" +
      ".price.QueryPriceRequestProto\0322.fintekke" +
      "rs.requests.price.QueryPriceResponseProt" +
      "o\022q\n\006Search\0221.fintekkers.requests.price." +
      "QueryPriceRequestProto\0322.fintekkers.requ" +
      "ests.price.QueryPriceResponseProto0\001\022p\n\007" +
      "ListIDs\0221.fintekkers.requests.price.Quer" +
      "yPriceRequestProto\0322.fintekkers.requests" +
      ".price.QueryPriceResponseProto\022{\n\026Valida" +
      "teCreateOrUpdate\0222.fintekkers.requests.p" +
      "rice.CreatePriceRequestProto\032-.fintekker" +
      "s.requests.util.errors.SummaryProto\022x\n\024V" +
      "alidateQueryRequest\0221.fintekkers.request" +
      "s.price.QueryPriceRequestProto\032-.fintekk" +
      "ers.requests.util.errors.SummaryProtoB\006\210" +
      "\001\001\220\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          fintekkers.requests.price.QueryPriceRequestProtos.getDescriptor(),
          fintekkers.requests.price.QueryPriceResponseProtos.getDescriptor(),
          fintekkers.requests.price.CreatePriceRequestProtos.getDescriptor(),
          fintekkers.requests.price.CreatePriceResponseProtos.getDescriptor(),
          fintekkers.requests.util.errors.Summary.getDescriptor(),
        });
    fintekkers.requests.price.QueryPriceRequestProtos.getDescriptor();
    fintekkers.requests.price.QueryPriceResponseProtos.getDescriptor();
    fintekkers.requests.price.CreatePriceRequestProtos.getDescriptor();
    fintekkers.requests.price.CreatePriceResponseProtos.getDescriptor();
    fintekkers.requests.util.errors.Summary.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
