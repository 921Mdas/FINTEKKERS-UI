// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fintekkers/models/util/lock/node_partition.proto

package fintekkers.models.util.lock;

public final class NodePartitionOuterClass {
  private NodePartitionOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface NodePartitionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fintekkers.models.util.lock.NodePartition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string object_class = 1;</code>
     * @return The objectClass.
     */
    java.lang.String getObjectClass();
    /**
     * <code>string object_class = 1;</code>
     * @return The bytes for objectClass.
     */
    com.google.protobuf.ByteString
        getObjectClassBytes();

    /**
     * <code>string version = 2;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     *The unique id that identifies a partition. For example a namespace with two
     *partitions may have one partition with value 0, and another with value 1
     *Values may not persist over time. If a namespace moves from having two partitions
     *to having four may go from {0,1} to {0,1,2,3} depending on the implementation.
     *Partitions are an internal Fintekkers concept and should not be exposed to 
     *clients
     * </pre>
     *
     * <code>int32 partition = 3;</code>
     * @return The partition.
     */
    int getPartition();

    /**
     * <pre>
     *A generic concept to allow partitions of different data types. For example,
     * 'Portfolio' may have a different partition space versus 'Security'. The natural
     * values to use for this would be the object types provided by different services.
     * </pre>
     *
     * <code>string namespace = 4;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <pre>
     *A generic concept to allow partitions of different data types. For example,
     * 'Portfolio' may have a different partition space versus 'Security'. The natural
     * values to use for this would be the object types provided by different services.
     * </pre>
     *
     * <code>string namespace = 4;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();
  }
  /**
   * <pre>
   *The definition of a partition
   * </pre>
   *
   * Protobuf type {@code fintekkers.models.util.lock.NodePartition}
   */
  public static final class NodePartition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fintekkers.models.util.lock.NodePartition)
      NodePartitionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodePartition.newBuilder() to construct.
    private NodePartition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodePartition() {
      objectClass_ = "";
      version_ = "";
      namespace_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NodePartition();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodePartition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              objectClass_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 24: {

              partition_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              namespace_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fintekkers.models.util.lock.NodePartitionOuterClass.internal_static_fintekkers_models_util_lock_NodePartition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fintekkers.models.util.lock.NodePartitionOuterClass.internal_static_fintekkers_models_util_lock_NodePartition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition.class, fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition.Builder.class);
    }

    public static final int OBJECT_CLASS_FIELD_NUMBER = 1;
    private volatile java.lang.Object objectClass_;
    /**
     * <code>string object_class = 1;</code>
     * @return The objectClass.
     */
    @java.lang.Override
    public java.lang.String getObjectClass() {
      java.lang.Object ref = objectClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        objectClass_ = s;
        return s;
      }
    }
    /**
     * <code>string object_class = 1;</code>
     * @return The bytes for objectClass.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getObjectClassBytes() {
      java.lang.Object ref = objectClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        objectClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private volatile java.lang.Object version_;
    /**
     * <code>string version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITION_FIELD_NUMBER = 3;
    private int partition_;
    /**
     * <pre>
     *The unique id that identifies a partition. For example a namespace with two
     *partitions may have one partition with value 0, and another with value 1
     *Values may not persist over time. If a namespace moves from having two partitions
     *to having four may go from {0,1} to {0,1,2,3} depending on the implementation.
     *Partitions are an internal Fintekkers concept and should not be exposed to 
     *clients
     * </pre>
     *
     * <code>int32 partition = 3;</code>
     * @return The partition.
     */
    @java.lang.Override
    public int getPartition() {
      return partition_;
    }

    public static final int NAMESPACE_FIELD_NUMBER = 4;
    private volatile java.lang.Object namespace_;
    /**
     * <pre>
     *A generic concept to allow partitions of different data types. For example,
     * 'Portfolio' may have a different partition space versus 'Security'. The natural
     * values to use for this would be the object types provided by different services.
     * </pre>
     *
     * <code>string namespace = 4;</code>
     * @return The namespace.
     */
    @java.lang.Override
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *A generic concept to allow partitions of different data types. For example,
     * 'Portfolio' may have a different partition space versus 'Security'. The natural
     * values to use for this would be the object types provided by different services.
     * </pre>
     *
     * <code>string namespace = 4;</code>
     * @return The bytes for namespace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getObjectClassBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, objectClass_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, version_);
      }
      if (partition_ != 0) {
        output.writeInt32(3, partition_);
      }
      if (!getNamespaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, namespace_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getObjectClassBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, objectClass_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, version_);
      }
      if (partition_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, partition_);
      }
      if (!getNamespaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, namespace_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition)) {
        return super.equals(obj);
      }
      fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition other = (fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition) obj;

      if (!getObjectClass()
          .equals(other.getObjectClass())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (getPartition()
          != other.getPartition()) return false;
      if (!getNamespace()
          .equals(other.getNamespace())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OBJECT_CLASS_FIELD_NUMBER;
      hash = (53 * hash) + getObjectClass().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + PARTITION_FIELD_NUMBER;
      hash = (53 * hash) + getPartition();
      hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNamespace().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *The definition of a partition
     * </pre>
     *
     * Protobuf type {@code fintekkers.models.util.lock.NodePartition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fintekkers.models.util.lock.NodePartition)
        fintekkers.models.util.lock.NodePartitionOuterClass.NodePartitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fintekkers.models.util.lock.NodePartitionOuterClass.internal_static_fintekkers_models_util_lock_NodePartition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fintekkers.models.util.lock.NodePartitionOuterClass.internal_static_fintekkers_models_util_lock_NodePartition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition.class, fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition.Builder.class);
      }

      // Construct using fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        objectClass_ = "";

        version_ = "";

        partition_ = 0;

        namespace_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fintekkers.models.util.lock.NodePartitionOuterClass.internal_static_fintekkers_models_util_lock_NodePartition_descriptor;
      }

      @java.lang.Override
      public fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition getDefaultInstanceForType() {
        return fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition.getDefaultInstance();
      }

      @java.lang.Override
      public fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition build() {
        fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition buildPartial() {
        fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition result = new fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition(this);
        result.objectClass_ = objectClass_;
        result.version_ = version_;
        result.partition_ = partition_;
        result.namespace_ = namespace_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition) {
          return mergeFrom((fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition other) {
        if (other == fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition.getDefaultInstance()) return this;
        if (!other.getObjectClass().isEmpty()) {
          objectClass_ = other.objectClass_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (other.getPartition() != 0) {
          setPartition(other.getPartition());
        }
        if (!other.getNamespace().isEmpty()) {
          namespace_ = other.namespace_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object objectClass_ = "";
      /**
       * <code>string object_class = 1;</code>
       * @return The objectClass.
       */
      public java.lang.String getObjectClass() {
        java.lang.Object ref = objectClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          objectClass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string object_class = 1;</code>
       * @return The bytes for objectClass.
       */
      public com.google.protobuf.ByteString
          getObjectClassBytes() {
        java.lang.Object ref = objectClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          objectClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string object_class = 1;</code>
       * @param value The objectClass to set.
       * @return This builder for chaining.
       */
      public Builder setObjectClass(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        objectClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string object_class = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearObjectClass() {
        
        objectClass_ = getDefaultInstance().getObjectClass();
        onChanged();
        return this;
      }
      /**
       * <code>string object_class = 1;</code>
       * @param value The bytes for objectClass to set.
       * @return This builder for chaining.
       */
      public Builder setObjectClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        objectClass_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <code>string version = 2;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string version = 2;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>string version = 2;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private int partition_ ;
      /**
       * <pre>
       *The unique id that identifies a partition. For example a namespace with two
       *partitions may have one partition with value 0, and another with value 1
       *Values may not persist over time. If a namespace moves from having two partitions
       *to having four may go from {0,1} to {0,1,2,3} depending on the implementation.
       *Partitions are an internal Fintekkers concept and should not be exposed to 
       *clients
       * </pre>
       *
       * <code>int32 partition = 3;</code>
       * @return The partition.
       */
      @java.lang.Override
      public int getPartition() {
        return partition_;
      }
      /**
       * <pre>
       *The unique id that identifies a partition. For example a namespace with two
       *partitions may have one partition with value 0, and another with value 1
       *Values may not persist over time. If a namespace moves from having two partitions
       *to having four may go from {0,1} to {0,1,2,3} depending on the implementation.
       *Partitions are an internal Fintekkers concept and should not be exposed to 
       *clients
       * </pre>
       *
       * <code>int32 partition = 3;</code>
       * @param value The partition to set.
       * @return This builder for chaining.
       */
      public Builder setPartition(int value) {
        
        partition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The unique id that identifies a partition. For example a namespace with two
       *partitions may have one partition with value 0, and another with value 1
       *Values may not persist over time. If a namespace moves from having two partitions
       *to having four may go from {0,1} to {0,1,2,3} depending on the implementation.
       *Partitions are an internal Fintekkers concept and should not be exposed to 
       *clients
       * </pre>
       *
       * <code>int32 partition = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPartition() {
        
        partition_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object namespace_ = "";
      /**
       * <pre>
       *A generic concept to allow partitions of different data types. For example,
       * 'Portfolio' may have a different partition space versus 'Security'. The natural
       * values to use for this would be the object types provided by different services.
       * </pre>
       *
       * <code>string namespace = 4;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *A generic concept to allow partitions of different data types. For example,
       * 'Portfolio' may have a different partition space versus 'Security'. The natural
       * values to use for this would be the object types provided by different services.
       * </pre>
       *
       * <code>string namespace = 4;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *A generic concept to allow partitions of different data types. For example,
       * 'Portfolio' may have a different partition space versus 'Security'. The natural
       * values to use for this would be the object types provided by different services.
       * </pre>
       *
       * <code>string namespace = 4;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A generic concept to allow partitions of different data types. For example,
       * 'Portfolio' may have a different partition space versus 'Security'. The natural
       * values to use for this would be the object types provided by different services.
       * </pre>
       *
       * <code>string namespace = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A generic concept to allow partitions of different data types. For example,
       * 'Portfolio' may have a different partition space versus 'Security'. The natural
       * values to use for this would be the object types provided by different services.
       * </pre>
       *
       * <code>string namespace = 4;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namespace_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:fintekkers.models.util.lock.NodePartition)
    }

    // @@protoc_insertion_point(class_scope:fintekkers.models.util.lock.NodePartition)
    private static final fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition();
    }

    public static fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodePartition>
        PARSER = new com.google.protobuf.AbstractParser<NodePartition>() {
      @java.lang.Override
      public NodePartition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodePartition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodePartition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodePartition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fintekkers.models.util.lock.NodePartitionOuterClass.NodePartition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fintekkers_models_util_lock_NodePartition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fintekkers_models_util_lock_NodePartition_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0fintekkers/models/util/lock/node_parti" +
      "tion.proto\022\033fintekkers.models.util.lock\"" +
      "\\\n\rNodePartition\022\024\n\014object_class\030\001 \001(\t\022\017" +
      "\n\007version\030\002 \001(\t\022\021\n\tpartition\030\003 \001(\005\022\021\n\tna" +
      "mespace\030\004 \001(\tb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_fintekkers_models_util_lock_NodePartition_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fintekkers_models_util_lock_NodePartition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fintekkers_models_util_lock_NodePartition_descriptor,
        new java.lang.String[] { "ObjectClass", "Version", "Partition", "Namespace", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
